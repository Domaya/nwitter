{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","refreshUser","userObj","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","onSubmit","event","a","preventDefault","updateProfile","className","onChange","value","target","type","autoFocus","placeholder","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad330c45.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n// const firebaseConfig = {\r\n//   apiKey: process.env.REACT_APP_API_KEY,\r\n//   authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n//   projectId: process.env.REACT_APP_PROJECT_ID,\r\n//   storageBucket: process.env.REACT_STORAGE_BUCKET,\r\n//   messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n//   appId: process.env.REACT_APP_ID\r\n// };\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCAgr71XIrR3kJtCfHG_KVWoc8igyIk-gE\",\r\n  authDomain: \"nwitter-72fa9.firebaseapp.com\",\r\n  projectId: \"nwitter-72fa9\",\r\n  storageBucket: \"nwitter-72fa9.appspot.com\",\r\n  messagingSenderId: \"572376417994\",\r\n  appId: \"1:572376417994:web:b4213fdb164e64c092d633\"\r\n}\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          className=\"authInput\"\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth= () => {\r\n  const onSocialClick = async(event) => {\r\n    const { target:{name} } = event;\r\n    let provider;\r\n    if(name === \"google\"){\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider\r\n    }else if(name === \"github\"){\r\n      provider = new firebaseInstance.auth.GithubAuthProvider\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  }\r\n\r\n  return(\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} /></button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} /></button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your nweet\"\r\n              value={newNweet}\r\n              required\r\n              autoFocus\r\n              onChange={onChange}\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default NweetFactory;","import React, { useState, useEffect } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n  useEffect(() => {\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navigation;","import React  from \"react\";\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({isLoggedIn, userObj, refreshUser}) => {\r\n\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj}/>}\r\n      <Switch>\r\n        {isLoggedIn ?(\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n            >\r\n          <Route exact path=\"/\">\r\n            <Home userObj={userObj}/>\r\n          </Route>\r\n          <Route exact path=\"/profile\">\r\n            <Profile userObj={userObj} refreshUser={refreshUser}/>\r\n          </Route>\r\n          </div>): (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport {authService} from \"fbase\";\r\n\r\nfunction App() {\r\n\r\n  const [init, setInit] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) =>{\r\n      if(user){\r\n        setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          updateProfile : (args) => user.updateProfile(args),\r\n        });\r\n      } else{\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    })\r\n  }, [])\r\n  const refreshUser = () => {\r\n    const user= authService.currentUser;\r\n    setUserObj({\r\n      displayName:user.displayName,\r\n      uid:user.uid,\r\n      updateProfile : (args) => user.updateProfile(args)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {init ? <AppRouter \r\n      refreshUser={refreshUser}\r\n      isLoggedIn={Boolean(userObj)}\r\n      userObj={userObj} />: \"Initializing...\"}\r\n      <footer>&copy; {new Date().getFullYear()} Dowitter </footer>\r\n    </>); //props전달\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}